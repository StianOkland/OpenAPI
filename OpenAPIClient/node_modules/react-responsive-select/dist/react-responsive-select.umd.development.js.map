{"version":3,"file":"react-responsive-select.umd.development.js","sources":["../src/constants/actionTypes.ts","../src/lib/eventHandlers/handleAlphaNumerical.ts","../src/lib/isEqual.ts","../src/lib/onChangeBroadcasters/multiSelectBroadcastChange.ts","../src/lib/onChangeBroadcasters/singleSelectBroadcastChange.ts","../src/lib/eventHandlers/handleBlur.ts","../src/lib/containsClassName.ts","../src/lib/eventHandlers/handleClick.ts","../src/lib/eventHandlers/handleEnterPressed.ts","../src/constants/keyCodes.ts","../src/lib/preventDefaultForKeyCodes.ts","../src/lib/nextValidIndex.ts","../src/lib/getNextIndex.ts","../src/lib/eventHandlers/handleKeyUpOrDownPressed.ts","../src/lib/eventHandlers/handleKeyEvent.ts","../src/lib/eventHandlers/handleTouchMove.ts","../src/lib/eventHandlers/handleTouchStart.ts","../src/lib/getCustomLabelText.ts","../src/reducers/initialState.ts","../src/reducers/lib/addMultiSelectIndex.ts","../src/reducers/lib/addMultiSelectOption.ts","../src/reducers/lib/getInitialMultiSelectOption.ts","../src/reducers/lib/getMultiSelectInitialSelectedOptions.ts","../src/reducers/lib/getMultiSelectSelectedValueIndexes.ts","../src/reducers/lib/getSelectedValueIndex.ts","../src/reducers/lib/getSingleSelectSelectedOption.ts","../src/reducers/lib/mergeIsAlteredState.ts","../src/reducers/lib/removeMultiSelectIndex.ts","../src/reducers/lib/removeMultiSelectOption.ts","../src/reducers/lib/resetMultiSelectState.ts","../src/reducers/reducer.ts","../src/components/MultiSelectOption.tsx","../src/components/MultiSelect.tsx","../src/components/SingleSelectOption.tsx","../src/components/SingleSelect.tsx","../src/Extras.tsx","../src/react-responsive-select.tsx"],"sourcesContent":["export const INITIALISE = 'INITIALISE';\nexport const SET_IS_DRAGGING = 'SET_IS_DRAGGING';\nexport const SET_OPTIONS_PANEL_OPEN = 'SET_OPTIONS_PANEL_OPEN';\nexport const SET_OPTIONS_PANEL_CLOSED = 'SET_OPTIONS_PANEL_CLOSED';\nexport const SET_SINGLESELECT_OPTIONS = 'SET_SINGLESELECT_OPTIONS';\nexport const SET_MULTISELECT_OPTIONS = 'SET_MULTISELECT_OPTIONS';\nexport const SET_OPTIONS_PANEL_CLOSED_NO_SELECTION = 'SET_OPTIONS_PANEL_CLOSED_NO_SELECTION';\nexport const SET_OPTIONS_PANEL_CLOSED_ONBLUR = 'SET_OPTIONS_PANEL_CLOSED_ONBLUR';\nexport const SET_NEXT_SELECTED_INDEX = 'SET_NEXT_SELECTED_INDEX';\nexport const SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC = 'SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC';\n","import * as actionTypes from '../../constants/actionTypes';\nimport { Select } from '../../react-responsive-select';\nimport { IOption, IState } from '../../types/';\n\ninterface IArgs {\n  event: KeyboardEvent;\n  state: IState;\n  RRSClassRef: Select;\n}\n\nlet stringMatch: string = '';\nlet timeoutActive: boolean;\n\n/**\n * User types some keys in quick successsion whilst focused on a select - search for this combonation in their options\n */\nexport function handleAlphaNumerical({ event, state, RRSClassRef }: IArgs): void {\n  const { options, disabled } = state;\n\n  if (disabled) return;\n\n  // Accumulate users key presses\n  stringMatch = stringMatch + event.key;\n\n  if (!timeoutActive) {\n    timeoutActive = true;\n\n    // Eventually (after 250ms) check if the accumulation of their keypresses matches the text of an option\n    setTimeout(() => {\n      const foundIndexes: number[] = options.reduce((acc: number[], option: IOption, index: number) => {\n        if (\n          !option.optHeader &&\n          !option.disabled &&\n          option.text &&\n          option.text.toLowerCase().indexOf(stringMatch) !== -1\n        ) {\n          acc.push(index);\n        }\n        return acc;\n      }, []);\n\n      if (foundIndexes.length > 0) {\n        RRSClassRef.updateState({\n          value: foundIndexes[0],\n          type: actionTypes.SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC,\n        });\n      }\n\n      // allow for the creation of a new search\n      timeoutActive = false;\n      stringMatch = '';\n    }, 250);\n  }\n}\n","const skipCircularReference = () => {\n  let cache: any[] = [];\n  return (_key: string, value: any) => {\n    if (typeof value === 'object' && value !== null) {\n      // Circular reference found\n      if (cache.indexOf(value) !== -1) return;\n      cache.push(value);\n    }\n    // No circular reference found\n    return value;\n  };\n};\n\nexport function isEqual(a: any, b: any): boolean {\n  return JSON.stringify(a, skipCircularReference()) === JSON.stringify(b, skipCircularReference());\n}\n","import { IOutputMultiSelect, IOutputMultiSelectOption } from '../../types/';\nimport { isEqual } from '../../lib/isEqual';\n\nexport function multiSelectBroadcastChange(\n  currOptions: IOutputMultiSelectOption[],\n  altered: boolean,\n  fn?: (changes: IOutputMultiSelect) => void,\n  prevOptions?: IOutputMultiSelectOption[]\n): void {\n  if (!fn) return;\n\n  const shouldBroadcastChange = !prevOptions || !isEqual(prevOptions.values, currOptions.values);\n\n  if (shouldBroadcastChange) {\n    fn({\n      options: currOptions.map((currOption: IOutputMultiSelectOption) => ({\n        name: currOption.name || '',\n        text: currOption.text || '',\n        value: currOption.value || '',\n      })),\n      altered,\n    });\n  }\n}\n","import { IOutputSingleSelect } from '../../types/';\nimport { isEqual } from '../../lib/isEqual';\n\nexport function singleSelectBroadcastChange(\n  currValue: IOutputSingleSelect,\n  altered?: boolean,\n  fn?: (changes: IOutputSingleSelect) => void,\n  prevValue?: IOutputSingleSelect\n): void {\n  if (!fn) return;\n\n  const shouldBroadcastChange = !isEqual(prevValue?.value, currValue?.value);\n\n  if (shouldBroadcastChange) {\n    fn({\n      name: currValue.name,\n      text: currValue.text,\n      value: currValue.value,\n      altered,\n    });\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport { Select } from '../../react-responsive-select';\nimport { IProps, IState } from '../../types/';\nimport { multiSelectBroadcastChange, singleSelectBroadcastChange } from '../onChangeBroadcasters';\n\ninterface TArgs {\n  state: IState;\n  RRSClassRef: Select;\n  props: IProps;\n}\n\nexport function handleBlur({ state, RRSClassRef, props }: TArgs): void {\n  const { onBlur, multiselect } = props;\n  const { isOptionsPanelOpen, disabled, altered, singleSelectSelectedOption, multiSelectSelectedOptions } = state;\n\n  if (disabled) return;\n\n  const isOutsideSelectBox = RRSClassRef.selectBox && !RRSClassRef.selectBox.contains(document.activeElement);\n\n  /* Handle click outside of selectbox */\n  if (isOptionsPanelOpen && isOutsideSelectBox) {\n    RRSClassRef.updateState({\n      type: actionTypes.SET_OPTIONS_PANEL_CLOSED_ONBLUR,\n    });\n  }\n\n  if (isOutsideSelectBox && onBlur) {\n    if (multiselect) {\n      multiSelectBroadcastChange(multiSelectSelectedOptions.options, Boolean(altered), onBlur);\n    } else {\n      singleSelectBroadcastChange(singleSelectSelectedOption, Boolean(altered), onBlur);\n    }\n  }\n}\n","export function containsClassName(element: HTMLElement, classNameStr: string): boolean {\n  return (\n    String(element.className)\n      .split(' ')\n      .indexOf(classNameStr) > -1\n  );\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport { Select } from '../../react-responsive-select';\nimport { containsClassName } from '../containsClassName';\n\nimport { IState, IProps } from '../../types/';\n\ninterface TArgs {\n  event: MouseEvent | KeyboardEvent;\n  state: IState;\n  RRSClassRef: Select;\n  props: IProps;\n}\n\nexport function handleClick({ event, state, RRSClassRef, props }: TArgs): void {\n  const { multiselect, multiSelectSelectedOptions, isOptionsPanelOpen, isDragging, disabled, options } = state;\n\n  if (disabled) return;\n\n  if (isDragging === false) {\n    /* Disallow natural event flow - don't allow blur to happen from button focus to selected option focus */\n    event.preventDefault();\n\n    if (event && containsClassName(event.target as HTMLElement, 'rrs__options')) {\n      return;\n    }\n\n    const value = parseFloat((event.target as any).getAttribute('data-key'));\n\n    if (options[value] && (options[value].disabled === true || options[value].optHeader === true)) {\n      return;\n    }\n\n    /* Select option index, if user selected option */\n    if (containsClassName(event.target as HTMLElement, 'rrs__option')) {\n      if (multiselect) {\n        const isExistingSelection = multiSelectSelectedOptions.options.some(\n          option => options[value] && options[value].hasOwnProperty('value') && option.value === options[value].value\n        );\n\n        if (!isExistingSelection && props.onSelect) {\n          props.onSelect(options[value]);\n        } else if (isExistingSelection && props.onDeselect) {\n          props.onDeselect(options[value]);\n        }\n      } else if (!multiselect && props.onSelect) {\n        props.onSelect(options[value]);\n      }\n\n      RRSClassRef.updateState({\n        type: multiselect ? actionTypes.SET_MULTISELECT_OPTIONS : actionTypes.SET_SINGLESELECT_OPTIONS,\n        value,\n      });\n\n      return;\n    }\n\n    /*\n      When the options panel is open, treat clicking the label/select button\n      or the background overlay on small screen as a 'no action'\n    */\n    if (\n      isOptionsPanelOpen &&\n      // button on desktop (rrs__label) or overlay on small screen (rrs)\n      (containsClassName(event.target as HTMLElement, 'rrs__label') ||\n        containsClassName(event.target as HTMLElement, 'rrs'))\n    ) {\n      RRSClassRef.updateState(\n        {\n          type: actionTypes.SET_OPTIONS_PANEL_CLOSED_NO_SELECTION,\n        },\n        () => RRSClassRef.focusButton()\n      );\n\n      return;\n    }\n\n    /* Else user clicked close or open the options panel */\n    RRSClassRef.updateState(\n      {\n        type: isOptionsPanelOpen ? actionTypes.SET_OPTIONS_PANEL_CLOSED : actionTypes.SET_OPTIONS_PANEL_OPEN,\n      },\n      (newState: IState) => {\n        // After state update, check if focus should be moved to the button\n        if (newState.isOptionsPanelOpen === false) {\n          RRSClassRef.focusButton();\n        }\n      }\n    );\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport { Select } from '../../react-responsive-select';\nimport { IProps, IState } from '../../types/';\n\ninterface IArgs {\n  event: KeyboardEvent;\n  state: IState;\n  props: IProps;\n  RRSClassRef: Select;\n}\n\nexport function handleEnterPressed({ event, state, props, RRSClassRef }: IArgs): void {\n  const { disabled, isOptionsPanelOpen, multiselect, nextPotentialSelectionIndex, options } = state;\n\n  if (disabled) return;\n\n  const value = parseFloat((event.target as any).getAttribute('data-key'));\n\n  if (options[value] && (options[value].disabled === true || options[value].optHeader === true)) {\n    return;\n  }\n\n  if (multiselect) {\n    const isExistingSelection = state.multiSelectSelectedOptions.options.some(\n      option => options[value] && options[value].hasOwnProperty('value') && option.value === options[value].value\n    );\n\n    if (!isExistingSelection && props.onSelect) {\n      props.onSelect(options[value]);\n    } else if (isExistingSelection && props.onDeselect) {\n      props.onDeselect(options[value]);\n    }\n\n    RRSClassRef.updateState({\n      type: actionTypes.SET_MULTISELECT_OPTIONS,\n      value: nextPotentialSelectionIndex,\n    });\n  } else {\n    if (props.onSelect) {\n      props.onSelect(options[value]);\n    }\n\n    RRSClassRef.updateState({\n      type: actionTypes.SET_SINGLESELECT_OPTIONS,\n      value: nextPotentialSelectionIndex,\n    });\n  }\n\n  if (isOptionsPanelOpen) {\n    event.stopPropagation(); // Do not submit form\n  } else {\n    // tslint:disable-next-line\n    props.onSubmit && props.onSubmit(event); // Submit the form\n  }\n}\n","export const keyCodes = {\n  TAB: 9,\n  ENTER: 13,\n  SPACE: 32,\n  ESCAPE: 27,\n  UP: 38,\n  DOWN: 40,\n};\n","export function preventDefaultForKeyCodes(keyCodes: number[], e: KeyboardEvent): void {\n  keyCodes.forEach((keyCode: number) => {\n    if (keyCode === e.keyCode) {\n      e.preventDefault();\n    }\n  });\n}\n","import { IOption, IState } from '../types/';\n\nexport function nextValidIndex(\n  state: IState,\n  nextPotentialSelectionIndex: number,\n  mode: 'INCREMENT' | 'DECREMENT' = 'INCREMENT'\n): number {\n  const { options } = state;\n\n  const possibleOptionIndexes = options.reduce((acc: number[], option: IOption, index: number) => {\n    if (!option.optHeader) acc.push(index);\n    return acc;\n  }, []);\n\n  const indexNotFocusable = possibleOptionIndexes.indexOf(nextPotentialSelectionIndex) === -1;\n\n  if (indexNotFocusable && mode === 'INCREMENT') {\n    const nextSelectionPossible =\n      options[nextPotentialSelectionIndex + 1] && !options[nextPotentialSelectionIndex + 1].optHeader;\n\n    return nextSelectionPossible ? nextPotentialSelectionIndex + 1 : possibleOptionIndexes[0];\n  }\n\n  if (indexNotFocusable && mode === 'DECREMENT') {\n    const nextSelectionPossible =\n      options[nextPotentialSelectionIndex - 1] && !options[nextPotentialSelectionIndex - 1].optHeader;\n\n    return nextSelectionPossible\n      ? nextPotentialSelectionIndex - 1\n      : possibleOptionIndexes[possibleOptionIndexes.length - 1];\n  }\n\n  return nextPotentialSelectionIndex;\n}\n","import { IState } from '../types/';\nimport { nextValidIndex } from './nextValidIndex';\n\nexport function getNextIndex(mode: 'INCREMENT' | 'DECREMENT', state: IState): number {\n  const { isOptionsPanelOpen, nextPotentialSelectionIndex, options } = state;\n\n  switch (mode) {\n    case 'INCREMENT':\n      // Hold selection on current selected option when options panel first opens\n      if (isOptionsPanelOpen === false) {\n        return nextValidIndex(state, nextPotentialSelectionIndex, 'INCREMENT');\n      }\n\n      // User is at the end of the options so cycle back to start\n      if (nextPotentialSelectionIndex === options.length - 1) {\n        return nextValidIndex(state, 0, 'INCREMENT');\n      }\n\n      // Else increment\n      return nextValidIndex(state, nextPotentialSelectionIndex + 1, 'INCREMENT');\n\n    case 'DECREMENT':\n      // Hold selection on current selected option when options panel first opens\n      if (isOptionsPanelOpen === false) {\n        return nextValidIndex(state, nextPotentialSelectionIndex, 'DECREMENT');\n      }\n\n      // User is at start of the options so cycle around to end\n      if (nextPotentialSelectionIndex === 0) {\n        return nextValidIndex(state, options.length - 1, 'DECREMENT');\n      }\n\n      // Else decrement\n      return nextValidIndex(state, nextPotentialSelectionIndex - 1, 'DECREMENT');\n\n    default:\n      return nextValidIndex(state, 0, 'DECREMENT');\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport { Select } from '../../react-responsive-select';\nimport { IState } from '../../types/';\nimport { getNextIndex } from '../getNextIndex';\n\ninterface TArgs {\n  state: IState;\n  type: 'INCREMENT' | 'DECREMENT';\n  RRSClassRef: Select;\n}\n\nexport function handleKeyUpOrDownPressed({ state, RRSClassRef, type }: TArgs): void {\n  const { isOptionsPanelOpen, disabled } = state;\n\n  if (disabled) return;\n\n  RRSClassRef.updateState({\n    type: actionTypes.SET_NEXT_SELECTED_INDEX,\n    value: getNextIndex(type, state),\n  });\n\n  /* Open the options panel */\n  if (isOptionsPanelOpen === false) {\n    RRSClassRef.updateState({\n      type: actionTypes.SET_OPTIONS_PANEL_OPEN,\n    });\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport { keyCodes } from '../../constants/keyCodes';\nimport { Select } from '../../react-responsive-select';\nimport { IProps, IState } from '../../types/';\nimport { preventDefaultForKeyCodes } from '../preventDefaultForKeyCodes';\nimport { handleAlphaNumerical } from './handleAlphaNumerical';\nimport { handleClick } from './handleClick';\nimport { handleEnterPressed } from './handleEnterPressed';\nimport { handleKeyUpOrDownPressed } from './handleKeyUpOrDownPressed';\n\ninterface TArgs {\n  event: KeyboardEvent;\n  state: IState;\n  props: IProps;\n  RRSClassRef: Select;\n}\n\nexport function handleKeyEvent({ event, state, props, RRSClassRef }: TArgs): void {\n  const { multiselect, isOptionsPanelOpen, disabled } = state;\n\n  if (disabled) return;\n\n  preventDefaultForKeyCodes([keyCodes.ENTER, keyCodes.SPACE, keyCodes.ESCAPE, keyCodes.UP, keyCodes.DOWN], event);\n\n  /* handle alpha-nemeric key press */\n  if (/^[a-z0-9]+$/.test(event.key)) {\n    handleAlphaNumerical({ event, RRSClassRef, state });\n  }\n\n  switch (event.keyCode) {\n    case keyCodes.TAB:\n      /* Don't shift focus when the panel is open (unless it's a Multiselect) */\n      if (isOptionsPanelOpen) {\n        event.preventDefault();\n\n        /**\n         * Multiselect does not close on selection. Focus button to blur and close options panel on TAB\n         * TODO add a test for this\n         */\n        if (multiselect) {\n          RRSClassRef.updateState({ type: actionTypes.SET_OPTIONS_PANEL_CLOSED }, () => RRSClassRef.focusButton());\n        }\n      }\n      break;\n\n    case keyCodes.ENTER:\n      /* can close the panel when open and focussed\n       * can submit the form when closed and focussed */\n      handleEnterPressed({\n        RRSClassRef,\n        event,\n        props,\n        state,\n      });\n      break;\n\n    case keyCodes.SPACE:\n      /* close the panel and select option when open, or open the panel if closed */\n      if (isOptionsPanelOpen) {\n        handleClick({ event, state, RRSClassRef, props });\n      } else {\n        RRSClassRef.updateState({\n          type: actionTypes.SET_OPTIONS_PANEL_OPEN,\n        });\n      }\n      break;\n\n    case keyCodes.ESCAPE:\n      /* remove focus from the panel when focussed */\n      RRSClassRef.updateState({ type: actionTypes.SET_OPTIONS_PANEL_CLOSED_NO_SELECTION }, () =>\n        RRSClassRef.focusButton()\n      );\n      break;\n\n    case keyCodes.UP:\n      /* will open the options panel if closed\n       * will not decrement selection if options panel closed\n       * if panel open, will decrement up the options list */\n      handleKeyUpOrDownPressed({\n        RRSClassRef,\n        state,\n        type: 'DECREMENT',\n      });\n      break;\n\n    case keyCodes.DOWN:\n      /* will open the options panel if closed\n       * will not increment selection if options panel closed\n       * if panel open, will increment down the options list */\n      handleKeyUpOrDownPressed({\n        RRSClassRef,\n        state,\n        type: 'INCREMENT',\n      });\n      break;\n\n    default:\n      break;\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport { Select } from '../../react-responsive-select';\nimport { IState } from '../../types/';\n\ninterface TArgs {\n  state: IState;\n  RRSClassRef: Select;\n}\n\nexport function handleTouchMove({ state, RRSClassRef }: TArgs): void {\n  /* if touchmove fired - User is dragging, this disables touchend/click */\n  const { isDragging, disabled } = state;\n\n  if (disabled) return;\n\n  if (!isDragging) {\n    RRSClassRef.updateState({\n      type: actionTypes.SET_IS_DRAGGING,\n      value: true,\n    });\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport { Select } from '../../react-responsive-select';\nimport { IState } from '../../types/';\n\ninterface TArgs {\n  state: IState;\n  RRSClassRef: Select;\n}\n\nexport function handleTouchStart({ state, RRSClassRef }: TArgs): void {\n  const { disabled } = state;\n\n  if (disabled) return;\n\n  /* initially it's assumed that the user is not dragging */\n  RRSClassRef.updateState({\n    type: actionTypes.SET_IS_DRAGGING,\n    value: false,\n  });\n}\n","import * as React from 'react';\nimport { IProps, IState } from '../types/';\n\ninterface TArgs {\n  state: IState;\n  props: IProps;\n}\n\nexport function getCustomLabelText({ state, props }: TArgs): React.ReactNode {\n  const { multiselect, customLabelRenderer } = props;\n  const { multiSelectSelectedOptions, singleSelectSelectedOption } = state;\n\n  if (!customLabelRenderer) return false;\n\n  if (multiselect) {\n    return customLabelRenderer(multiSelectSelectedOptions);\n  }\n\n  return customLabelRenderer(singleSelectSelectedOption);\n}\n","export const initialState = {\n  // Constants\n  multiselect: false,\n\n  // Universal\n  name: '',\n  options: [],\n  isDragging: false,\n  isOptionsPanelOpen: false,\n  altered: false,\n\n  // Single select\n  singleSelectInitialIndex: 0,\n  singleSelectSelectedIndex: 0,\n  singleSelectSelectedOption: {},\n\n  // For determining highlighted item on Keyboard navigation\n  nextPotentialSelectionIndex: 0,\n\n  // Multi select\n  multiSelectInitialSelectedIndexes: [0],\n  multiSelectSelectedOptions: {\n    altered: false,\n    options: [],\n  },\n  multiSelectSelectedIndexes: [],\n};\n","import { IState } from '../../types/';\n\nexport function addMultiSelectIndex(state: IState, index: number): number[] {\n  return [...state.multiSelectSelectedIndexes, index];\n}\n","import { IOutputMultiSelect, IState } from '../../types/';\n\nexport function addMultiSelectOption(state: IState, index: number): IOutputMultiSelect {\n  return {\n    options: [\n      ...state.multiSelectSelectedOptions.options,\n      {\n        name: state.name,\n        text: state.options[index].text,\n        value: state.options[index].value,\n      },\n    ],\n  };\n}\n","import { IOption, IState } from '../../types/';\n\ninterface IOutputMultiSelectOptionSansDisabled {\n  value?: string;\n  text?: string;\n  name?: string;\n}\n\ninterface IFindClosestValidOptionOutput {\n  option: IOutputMultiSelectOptionSansDisabled;\n  index: number;\n}\n\nfunction findClosestValidOption(state: IState): { option: IOutputMultiSelectOptionSansDisabled; index: number } {\n  const { options, name } = state;\n  const possibleOptions = options.reduce((acc: IFindClosestValidOptionOutput[], option: IOption, index: number) => {\n    if (!option.optHeader) {\n      acc.push({\n        option: { value: option.value, text: option.text, name },\n        index,\n      });\n    }\n    return acc;\n  }, []);\n\n  // Note: Will fail if there is only one option, and it is an optHeader\n  return possibleOptions[0];\n}\n\nexport function getInitialMultiSelectOption(state: IState): IState {\n  //: { option: IOutputMultiSelectOptionSansDisabled; index: number; }\n  const { option, index } = findClosestValidOption(state);\n\n  return {\n    ...state,\n    multiSelectSelectedIndexes: [index],\n    multiSelectSelectedOptions: { options: [{ ...option }] },\n    nextPotentialSelectionIndex: index,\n  };\n}\n","import { IOption, IOutputMultiSelectOption, IState } from '../../types/';\n\n/* Use existing state.singleSelectSelectedOption, or first possible option to use as a selection */\nfunction findClosestValidOption(state: IState): IOutputMultiSelectOption {\n  const { multiSelectSelectedOptions, options, name } = state;\n\n  if (multiSelectSelectedOptions && multiSelectSelectedOptions.options.length) {\n    return multiSelectSelectedOptions.options[0];\n  }\n\n  const possibleOptions = options.reduce((acc: IOption[], option: IOption) => {\n    if (!option.optHeader) acc.push(option);\n    return acc;\n  }, []);\n\n  // Note: Will fail if no non-optHeader options exist\n  return {\n    name,\n    text: possibleOptions[0].text,\n    value: possibleOptions[0].value,\n  };\n}\n\nexport function getMultiSelectInitialSelectedOptions(\n  state: IState,\n  selectedValues?: string[]\n): IOutputMultiSelectOption[] {\n  const { noSelectionLabel, options, name } = state;\n\n  let selectedOptionsToReturn;\n\n  if (!noSelectionLabel) {\n    // Preselect the first item in the list when if no noSelectionLabel exists\n    if (selectedValues && selectedValues.length > 0) {\n      // Grab selected options by matching option.value with selectedValues, and merge in `name`\n      selectedOptionsToReturn = options\n        .filter((option: IOption) => selectedValues.some((selectedValue: string) => selectedValue === option.value))\n        .map((option: IOption) => ({ name, ...option }));\n    } else {\n      // Grab first option and merge in `name`\n      const option = options[0] && options[0].optHeader ? findClosestValidOption(state) : options[0];\n\n      selectedOptionsToReturn = [\n        {\n          name,\n          text: option.text,\n          value: option.value,\n        },\n      ];\n    }\n\n    return selectedOptionsToReturn;\n  }\n\n  selectedOptionsToReturn =\n    selectedValues && selectedValues.length > 0\n      ? options.reduce((acc: any[], option: IOption) => {\n          if (selectedValues.some((selectedValue: string) => selectedValue === option.value)) {\n            acc.push({ ...option });\n          }\n          return acc;\n        }, [])\n      : [\n          {\n            name: state.name,\n            text: noSelectionLabel,\n            value: 'null',\n          },\n        ];\n\n  return selectedOptionsToReturn;\n}\n","import { nextValidIndex } from '../../lib/nextValidIndex';\nimport { IState } from '../../types/';\n\nexport function getMultiSelectSelectedValueIndexes(\n  state: IState,\n  selectedValues: string[] = [],\n  noSelectionLabel?: string\n): number[] {\n  const { options } = state;\n  const emptyResult = noSelectionLabel ? [] : [nextValidIndex(state, 0)];\n\n  /* return the index of the found item, if found */\n  const result = options.reduce((acc: any, option: any, value: number) => {\n    if (selectedValues.some((selected: string) => option.value === selected)) {\n      acc.push(value);\n    }\n    return acc;\n  }, []);\n\n  /* If something found return that, else return the first item */\n  return result.length > 0 ? result : emptyResult;\n}\n","import { IOption } from '../../types/';\n\ninterface TArgs {\n  options: IOption[];\n  selectedValue: string;\n  noSelectionLabel: string;\n}\n\nexport function getSelectedValueIndex({ options, selectedValue, noSelectionLabel }: TArgs): number {\n  const index = selectedValue ? options.map((option: IOption) => option.value).indexOf(selectedValue) : -1;\n\n  // Allow a negative index if user wants to display a noSelectionLabel\n  // Keyboard will not focus on an option when first opened\n\n  // Select the first option when panel opens if !noSelectionLabel\n  return index > -1 || noSelectionLabel ? index : 0;\n}\n","import { IOption, IState } from '../../types/';\n\n/*\n  use existing state.singleSelectSelectedOption, or first possible option to use as a selection\n*/\nfunction closestValidOption(state: IState): IOption & { name?: string } {\n  if (state.singleSelectSelectedOption) {\n    return state.singleSelectSelectedOption;\n  }\n\n  const possibleOptions: IOption[] = state.options.reduce((acc: IOption[], option: IOption): IOption[] => {\n    if (!option.optHeader) {\n      acc.push(option);\n    }\n    return acc;\n  }, []);\n\n  // Note: Will fail if no non-optHeader options exist\n  return {\n    ...possibleOptions[0],\n    name: state.name,\n  };\n}\n\nexport function getSingleSelectSelectedOption(\n  state: IState,\n  initialSelectedIndex: number = 0\n): IOption & { name?: string } {\n  const selectionIndex = initialSelectedIndex === -1 && !state.noSelectionLabel ? 0 : initialSelectedIndex;\n\n  // if optHeader, then use existing state.singleSelectSelectedOption, or findClosestValidOption\n  if (state.options[selectionIndex] && state.options[selectionIndex].optHeader) {\n    return closestValidOption(state);\n  }\n\n  // Has selection, has no selection use default noSelectionLabel (if exists) and nullify value\n  if (!state.noSelectionLabel) {\n    // Preselect the first item in the list when if no noSelectionLabel exists\n    return {\n      name: state.name,\n      ...state.options[selectionIndex],\n    };\n  }\n\n  return initialSelectedIndex > -1\n    ? {\n        name: state.name,\n        ...state.options[initialSelectedIndex],\n      }\n    : {\n        name: state.name,\n        text: state.noSelectionLabel,\n        value: 'null',\n      };\n}\n","import { IState } from '../../types/';\n\nexport function isAltered(newState: IState): boolean {\n  return !newState.multiselect\n    ? newState.singleSelectSelectedIndex !== newState.singleSelectInitialIndex\n    : !(\n        JSON.stringify(newState.multiSelectInitialSelectedIndexes) ===\n        JSON.stringify(newState.multiSelectSelectedIndexes)\n      );\n}\n\nexport function mergeIsAlteredState(newState: IState): IState {\n  return {\n    ...newState,\n    altered: isAltered(newState),\n  };\n}\n","import { IState } from '../../types/';\n\nexport function removeMultiSelectIndex(state: IState, indexLocation: number): number[] {\n  return [\n    ...state.multiSelectSelectedIndexes.slice(0, indexLocation),\n    ...state.multiSelectSelectedIndexes.slice(indexLocation + 1),\n  ];\n}\n","import { IOutputMultiSelectOption, IState } from '../../types/';\n\nexport function removeMultiSelectOption(\n  state: IState,\n  indexLocation: number\n): {\n  options: IOutputMultiSelectOption[];\n} {\n  return {\n    options: [\n      ...state.multiSelectSelectedOptions.options.slice(0, indexLocation),\n      ...state.multiSelectSelectedOptions.options.slice(indexLocation + 1),\n    ],\n  };\n}\n","import { IState } from '../../types/';\nimport { initialState } from '../initialState';\n\nexport function resetMultiSelectState(state: IState): IState {\n  return {\n    // reset multiSelect state\n    ...state,\n    multiSelectSelectedIndexes: [...initialState.multiSelectSelectedIndexes],\n    multiSelectSelectedOptions: { ...initialState.multiSelectSelectedOptions },\n  };\n}\n","import * as actionTypes from '../constants/actionTypes';\nimport { nextValidIndex } from '../lib/nextValidIndex';\nimport { IAction, IOption, IState } from '../types/';\n\nimport {\n  addMultiSelectIndex,\n  addMultiSelectOption,\n  getInitialMultiSelectOption,\n  getMultiSelectInitialSelectedOptions,\n  getMultiSelectSelectedValueIndexes,\n  getSelectedValueIndex,\n  getSingleSelectSelectedOption,\n  mergeIsAlteredState,\n  removeMultiSelectIndex,\n  removeMultiSelectOption,\n  resetMultiSelectState,\n} from './lib';\n\nexport function reducer(state: IState, action: IAction): IState {\n  switch (action.type) {\n    case actionTypes.INITIALISE: {\n      const initialSelectedIndex = getSelectedValueIndex(action.value);\n      const initialSelectedIndexes = getMultiSelectSelectedValueIndexes(\n        action.value,\n        action.value.selectedValues,\n        action.value.noSelectionLabel\n      );\n\n      return {\n        ...state,\n\n        hasOptHeaders: action.value.options.some((option: IOption) => option.optHeader === true),\n\n        // Constants\n        multiselect: action.value.multiselect || false,\n\n        // Optional nothing selected label\n        noSelectionLabel: action.value.noSelectionLabel,\n\n        // Universal\n        name: action.value.name,\n        options: action.value.options,\n        altered: action.value.altered || false,\n        disabled: action.value.options.length === 0 || action.value.disabled || false,\n\n        // Single select\n        singleSelectInitialIndex: initialSelectedIndex,\n        singleSelectSelectedIndex: initialSelectedIndex,\n        singleSelectSelectedOption: getSingleSelectSelectedOption(action.value, initialSelectedIndex),\n\n        nextPotentialSelectionIndex: state.nextPotentialSelectionIndex\n          ? state.nextPotentialSelectionIndex\n          : initialSelectedIndex,\n\n        // Multi select\n        multiSelectInitialSelectedIndexes: initialSelectedIndexes,\n        multiSelectSelectedIndexes: initialSelectedIndexes,\n        multiSelectSelectedOptions: {\n          options:\n            action.value.options.length > 0\n              ? getMultiSelectInitialSelectedOptions(action.value, action.value.selectedValues)\n              : [],\n        },\n      };\n    }\n\n    case actionTypes.SET_IS_DRAGGING:\n      return {\n        ...state,\n        isDragging: action.value,\n      };\n\n    case actionTypes.SET_OPTIONS_PANEL_OPEN: {\n      const newState = {\n        ...state,\n        isOptionsPanelOpen: true,\n\n        // For determining highlighted item on Keyboard navigation\n        nextPotentialSelectionIndex: ((): number => {\n          if (state.multiselect) {\n            return state.multiSelectSelectedIndexes.length\n              ? nextValidIndex(state, state.multiSelectSelectedIndexes[0])\n              : nextValidIndex(state, 0);\n          }\n          return nextValidIndex(state, state.nextPotentialSelectionIndex);\n        })(),\n\n        singleSelectSelectedOption: getSingleSelectSelectedOption(state, state.nextPotentialSelectionIndex),\n      };\n\n      return mergeIsAlteredState(newState);\n    }\n\n    case actionTypes.SET_OPTIONS_PANEL_CLOSED: {\n      const newState = {\n        ...state,\n        isOptionsPanelOpen: false,\n        singleSelectSelectedIndex: state.nextPotentialSelectionIndex,\n        singleSelectSelectedOption: getSingleSelectSelectedOption(state, state.nextPotentialSelectionIndex),\n      };\n      return mergeIsAlteredState(newState);\n    }\n\n    case actionTypes.SET_OPTIONS_PANEL_CLOSED_NO_SELECTION:\n    case actionTypes.SET_OPTIONS_PANEL_CLOSED_ONBLUR:\n      return {\n        ...state,\n        isOptionsPanelOpen: false,\n      };\n\n    case actionTypes.SET_NEXT_SELECTED_INDEX:\n      return {\n        ...state,\n        nextPotentialSelectionIndex: action.value,\n      };\n\n    case actionTypes.SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC:\n      return {\n        ...state,\n        isOptionsPanelOpen: true,\n        nextPotentialSelectionIndex: action.value,\n      };\n\n    case actionTypes.SET_SINGLESELECT_OPTIONS: {\n      const nextState = {\n        ...state,\n        nextPotentialSelectionIndex: action.value,\n        singleSelectSelectedIndex: action.value,\n        isOptionsPanelOpen: false,\n        singleSelectSelectedOption: getSingleSelectSelectedOption(state, action.value),\n      };\n\n      // Set altered state\n      return mergeIsAlteredState(nextState);\n    }\n\n    case actionTypes.SET_MULTISELECT_OPTIONS: {\n      if (!state.noSelectionLabel) {\n        const isFirstOptionInListSelected =\n          state.multiSelectSelectedIndexes[0] === 0 && state.multiSelectSelectedIndexes.length === 1;\n\n        // If anything selected and first option was requested, deselect all, then select first option\n        const shouldDeselectAllAndSelectFirstOption =\n          state.multiSelectSelectedIndexes.length > 0 &&\n          !isFirstOptionInListSelected &&\n          action.value === 0 &&\n          !state.noSelectionLabel;\n\n        // Deselect first option when any other value is requested\n        const shouldDeselectFirstOptionAndSelectRequestedOption = isFirstOptionInListSelected && action.value !== 0;\n\n        // If any thing selected and first option was requested, deselect all, and return first option\n        if (shouldDeselectAllAndSelectFirstOption) {\n          return mergeIsAlteredState(getInitialMultiSelectOption(state));\n        }\n\n        // Deselect first option when first option selected and another option is requested\n        if (shouldDeselectFirstOptionAndSelectRequestedOption) {\n          // eslint-disable-next-line no-param-reassign\n          state = resetMultiSelectState(state);\n        }\n      }\n\n      // Remove noSelectionLabel from selected options if something is selected\n      if (state.noSelectionLabel && state.multiSelectSelectedOptions.options[0].text === state.noSelectionLabel) {\n        // eslint-disable-next-line no-param-reassign\n        state.multiSelectSelectedOptions.options = [];\n      }\n\n      // With optHeader, action.value can go out of bounds - check and adjust the value of value when requried\n      const actionOptionIndexAdjusted = nextValidIndex(state, action.value);\n\n      // Find index of requested option\n      const indexLocation = state.multiSelectSelectedIndexes.indexOf(actionOptionIndexAdjusted);\n\n      // If requested item does not exist, add it. Else remove it\n      let nextState = {\n        ...state,\n        nextPotentialSelectionIndex: actionOptionIndexAdjusted,\n        multiSelectSelectedIndexes:\n          indexLocation === -1\n            ? addMultiSelectIndex(state, actionOptionIndexAdjusted)\n            : removeMultiSelectIndex(state, indexLocation),\n        multiSelectSelectedOptions:\n          indexLocation === -1\n            ? addMultiSelectOption(state, actionOptionIndexAdjusted)\n            : removeMultiSelectOption(state, indexLocation),\n      };\n\n      if (nextState.multiSelectSelectedOptions.options.length === 0) {\n        // Reset to noSelectionLabel if user has deselected all items and has set a `noSelectionLabel` prop\n        if (state.noSelectionLabel) {\n          nextState = {\n            ...nextState,\n            nextPotentialSelectionIndex: state.hasOptHeaders ? nextValidIndex(state, -1) : -1,\n            multiSelectSelectedOptions: {\n              options: getMultiSelectInitialSelectedOptions(state),\n            },\n          };\n        } else if (!state.noSelectionLabel) {\n          // Select first option if user has deselected all items\n          nextState = getInitialMultiSelectOption(state);\n        }\n      }\n      // Set altered state\n      return mergeIsAlteredState(nextState);\n    }\n    default:\n      return state;\n  }\n}\n","import * as React from 'react';\nimport singleline from 'singleline';\nimport { IOption } from '../types/';\n\ninterface TProps {\n  name: string;\n  index: number;\n  isOptionsPanelOpen: boolean;\n  nextPotentialSelectionIndex: number;\n  optionsContainerRef: React.RefObject<HTMLUListElement>;\n  optHeaderLabel: string;\n  multiSelectSelectedIndexes: number[];\n  option: IOption;\n}\n\nexport class MultiSelectOption extends React.Component<TProps> {\n  private optionRef: React.RefObject<HTMLLIElement>;\n  private scrollOffset: number;\n\n  constructor(props: TProps) {\n    super(props);\n    this.optionRef = React.createRef();\n    this.scrollOffset = 0;\n  }\n\n  public getScrollOffset(): number {\n    const el = document.querySelector('.rrs__option--header');\n    return Math.ceil((el && el.getBoundingClientRect().height) || 0);\n  }\n\n  public componentDidUpdate(): void {\n    const { index, isOptionsPanelOpen, nextPotentialSelectionIndex, optionsContainerRef, optHeaderLabel } = this.props;\n\n    if (index === nextPotentialSelectionIndex && isOptionsPanelOpen) {\n      if (this.optionRef.current && optionsContainerRef.current) {\n        this.optionRef.current.focus();\n\n        if (optHeaderLabel !== '') {\n          const scrollDiff = Math.ceil(\n            this.optionRef.current.getBoundingClientRect().top - optionsContainerRef.current.getBoundingClientRect().top\n          );\n\n          this.scrollOffset = this.scrollOffset || this.getScrollOffset();\n\n          if (scrollDiff < this.scrollOffset) {\n            optionsContainerRef.current.scroll(\n              0,\n              Math.floor(optionsContainerRef.current.scrollTop - this.scrollOffset)\n            );\n          }\n        }\n      }\n    }\n  }\n\n  public isDisabled(option: IOption): boolean {\n    return Boolean(option.disabled || option.optHeader);\n  }\n\n  public render(): React.ReactNode {\n    const { index, name, multiSelectSelectedIndexes, nextPotentialSelectionIndex, option, optHeaderLabel } = this.props;\n    const isSelected = multiSelectSelectedIndexes.some((i: number) => i === index);\n\n    return (\n      <li\n        role=\"checkbox\"\n        data-testid={`rrs-option_${name}_${index}`}\n        tabIndex={-1}\n        aria-checked={isSelected}\n        aria-label={`\n        ${option.text || (option.markup && (option.markup as HTMLElement).textContent)} ${\n          optHeaderLabel !== '' ? ` of ${optHeaderLabel}` : ''\n        }\n      `}\n        aria-live=\"assertive\"\n        aria-disabled={this.isDisabled(option) ? 'true' : 'false'}\n        data-key={index}\n        ref={this.optionRef}\n        className={singleline(`\n          rrs__option\n          ${isSelected ? 'rrs__option--selected' : ''}\n          ${nextPotentialSelectionIndex === index ? 'rrs__option--next-selection' : ''}\n          ${option.disabled === true ? 'rrs__option--disabled' : ''}\n          ${option.optHeader === true ? 'rrs__option--header' : ''}\n        `)}\n      >\n        {option.markup || option.text}\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport singleline from 'singleline';\nimport { IOption, IOutputMultiSelect, IOutputMultiSelectOption } from '../types/';\nimport { MultiSelectOption } from './MultiSelectOption';\n\ninterface TProps {\n  selectBoxRef: HTMLDivElement | null;\n  caretIcon: React.ReactNode;\n  customLabelText: React.ReactNode;\n  disabled: boolean;\n  isDragging: boolean;\n  isOptionsPanelOpen: boolean;\n  multiSelectSelectedIndexes: number[];\n  multiSelectSelectedOptions: IOutputMultiSelect;\n  name: string;\n  options: IOption[];\n  nextPotentialSelectionIndex: number;\n  prefix: string;\n}\n\nexport class MultiSelect extends React.Component<TProps> {\n  private optionsButton: React.RefObject<HTMLDivElement>;\n  private optionsContainer: React.RefObject<HTMLUListElement>;\n\n  constructor(props: TProps) {\n    super(props);\n    this.optionsButton = React.createRef();\n    this.optionsContainer = React.createRef();\n  }\n\n  public componentDidUpdate(prevProps: TProps): void {\n    /*\n      Focus selectBox button if options panel has just closed,\n      there has been an interaction or the value has changed\n    */\n    const { isOptionsPanelOpen, selectBoxRef } = this.props;\n\n    const optionsPanelJustClosed = !isOptionsPanelOpen && prevProps.isOptionsPanelOpen;\n\n    if (optionsPanelJustClosed && selectBoxRef && selectBoxRef.contains(document.activeElement)) {\n      // tslint:disable-next-line\n      this.optionsButton.current && this.optionsButton.current.focus();\n    }\n  }\n\n  public getAriaLabel(): string {\n    const { multiSelectSelectedOptions, prefix } = this.props;\n    const selectedOptionsLength = multiSelectSelectedOptions.options.length;\n\n    return singleline(`\n      Checkbox group ${prefix ? `${prefix} ` : ''} has\n      ${selectedOptionsLength} item${selectedOptionsLength === 1 ? '' : 's'} selected.\n      Selected option${selectedOptionsLength === 1 ? '' : 's'} ${selectedOptionsLength === 1 ? 'is' : 'are'}\n      ${multiSelectSelectedOptions.options\n        .map((option: IOutputMultiSelectOption): string => option.text || '')\n        .join(' and ')}\n    `);\n  }\n\n  public render(): React.ReactNode {\n    const {\n      caretIcon,\n      customLabelText,\n      disabled,\n      isOptionsPanelOpen,\n      multiSelectSelectedIndexes,\n      multiSelectSelectedOptions,\n      name,\n      options,\n      nextPotentialSelectionIndex,\n      prefix,\n    } = this.props;\n\n    let optHeaderLabel: string = '';\n\n    return (\n      <div>\n        <div\n          role=\"button\"\n          tabIndex={0}\n          aria-disabled={disabled}\n          aria-haspopup=\"true\"\n          aria-expanded={isOptionsPanelOpen}\n          aria-controls={`rrs-${name}-menu`}\n          ref={this.optionsButton}\n          className={singleline(`\n            rrs__button\n            ${disabled === true ? 'rrs__button--disabled' : ''}\n          `)}\n        >\n          {customLabelText && (\n            <div className=\"rrs__label\">\n              <span\n                aria-label={this.getAriaLabel()}\n                className=\"rrs__label__text\"\n                id={`rrs-${name}-label`}\n                data-testid={`rrs-label_${name}`}\n              >\n                {customLabelText}\n              </span>\n              {caretIcon && caretIcon}\n            </div>\n          )}\n\n          {!customLabelText && (\n            <div className=\"rrs__label\">\n              <span\n                aria-label={this.getAriaLabel()}\n                className=\"rrs__label__text\"\n                id={`rrs-${name}-label`}\n                data-testid={`rrs-label_${name}`}\n              >\n                <span className=\"rrs__multiselect-label\">\n                  <span className=\"rrs__multiselect-label__text\">\n                    {`${prefix ? `${prefix} ` : ''}\n                  ${multiSelectSelectedOptions.options.length > 0 ? multiSelectSelectedOptions.options[0].text : ''}`}\n                  </span>\n                  {multiSelectSelectedOptions.options.length > 1 && (\n                    <span className=\"rrs__multiselect-label__badge\">\n                      {`+ ${multiSelectSelectedOptions.options.length - 1}`}\n                    </span>\n                  )}\n                </span>\n              </span>\n              {caretIcon && caretIcon}\n            </div>\n          )}\n\n          {name && (\n            <input\n              type=\"hidden\"\n              name={name}\n              data-testid={`rrs-input_${name}`}\n              value={[multiSelectSelectedOptions.options.map((v: IOutputMultiSelectOption) => v.value)].join(',')}\n            />\n          )}\n        </div>\n\n        <ul\n          id={`rrs-${name}-menu`}\n          aria-labelledby={`rrs-${name}-label`}\n          role=\"menu\"\n          className=\"rrs__options\"\n          ref={this.optionsContainer}\n        >\n          {options.length > 0 &&\n            options.map((option: IOption, index: number) => {\n              if (option.optHeader) {\n                optHeaderLabel = option.text || (option.markup && (option.markup as HTMLElement).textContent) || '';\n              }\n              return (\n                <MultiSelectOption\n                  key={index}\n                  name={name}\n                  optHeaderLabel={optHeaderLabel}\n                  optionsContainerRef={this.optionsContainer}\n                  index={index}\n                  option={option}\n                  isOptionsPanelOpen={isOptionsPanelOpen}\n                  multiSelectSelectedIndexes={multiSelectSelectedIndexes}\n                  nextPotentialSelectionIndex={nextPotentialSelectionIndex}\n                />\n              );\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport singleline from 'singleline';\nimport { IOption } from '../types/';\n\ninterface TProps {\n  index: number;\n  name: string;\n  isOptionsPanelOpen: boolean;\n  optionsContainerRef: React.RefObject<HTMLUListElement>;\n  nextPotentialSelectionIndex: number;\n  option: IOption;\n  singleSelectSelectedIndex: number;\n  optHeaderLabel: string;\n}\n\nexport class SingleSelectOption extends React.Component<TProps> {\n  private optionRef: React.RefObject<HTMLLIElement>;\n  private scrollOffset: number;\n\n  constructor(props: TProps) {\n    super(props);\n    this.optionRef = React.createRef();\n    this.scrollOffset = 0;\n  }\n\n  public getScrollOffset(): number {\n    const el = document.querySelector('.rrs__option--header');\n    return Math.ceil((el && el.getBoundingClientRect().height) || 0);\n  }\n\n  public componentDidUpdate(): void {\n    const { index, isOptionsPanelOpen, nextPotentialSelectionIndex, optionsContainerRef, optHeaderLabel } = this.props;\n\n    if (index === nextPotentialSelectionIndex && isOptionsPanelOpen) {\n      if (this.optionRef.current && optionsContainerRef.current) {\n        this.optionRef.current.focus();\n\n        if (optHeaderLabel !== '') {\n          const scrollDiff = Math.ceil(\n            this.optionRef.current.getBoundingClientRect().top - optionsContainerRef.current.getBoundingClientRect().top\n          );\n\n          this.scrollOffset = this.scrollOffset || this.getScrollOffset();\n\n          if (scrollDiff < this.scrollOffset) {\n            optionsContainerRef.current.scroll(\n              0,\n              Math.floor(optionsContainerRef.current.scrollTop - this.scrollOffset)\n            );\n          }\n        }\n      }\n    }\n  }\n\n  public isDisabled(option: IOption): boolean {\n    return Boolean(option.disabled || option.optHeader);\n  }\n\n  public render(): React.ReactNode {\n    const { index, name, nextPotentialSelectionIndex, option, singleSelectSelectedIndex, optHeaderLabel } = this.props;\n\n    return (\n      <li\n        role=\"menuitem\"\n        data-testid={`rrs-option_${name}_${index}`}\n        tabIndex={-1}\n        aria-disabled={this.isDisabled(option) ? 'true' : 'false'}\n        aria-label={`\n          ${option.text || (option.markup && (option.markup as HTMLElement).textContent)} ${\n          optHeaderLabel !== '' ? ` of ${optHeaderLabel}` : ''\n        }\n        `}\n        data-key={index}\n        ref={this.optionRef}\n        className={singleline(`\n          rrs__option\n          ${singleSelectSelectedIndex === index ? 'rrs__option--selected' : ''}\n          ${nextPotentialSelectionIndex === index ? 'rrs__option--next-selection' : ''}\n          ${option.disabled === true ? 'rrs__option--disabled' : ''}\n          ${option.optHeader === true ? 'rrs__option--header' : ''}\n        `)}\n      >\n        {option.markup || option.text}\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport singleline from 'singleline';\nimport { IOption, IOutputSingleSelect } from '../types/';\nimport { SingleSelectOption } from './SingleSelectOption';\n\ninterface TProps {\n  prefix: string;\n  singleSelectSelectedOption: IOutputSingleSelect;\n  name: string;\n  caretIcon: React.ReactNode;\n  singleSelectSelectedIndex: number;\n  noSelectionLabel: string;\n  isOptionsPanelOpen: boolean;\n  nextPotentialSelectionIndex: number;\n  selectBoxRef: HTMLDivElement | null;\n  customLabelText: React.ReactNode;\n  disabled: boolean;\n  options: IOption[];\n}\n\nexport class SingleSelect extends React.Component<TProps> {\n  private optionsButton: React.RefObject<HTMLDivElement>;\n  private optionsContainer: React.RefObject<HTMLUListElement>;\n\n  constructor(props: TProps) {\n    super(props);\n    this.optionsButton = React.createRef();\n    this.optionsContainer = React.createRef();\n  }\n\n  public componentDidUpdate(prevProps: TProps): void {\n    /*\n      Focus selectBox button if options panel has just closed,\n      there has been an interaction,\n      or isOptionsPanelOpen and nextPotentialSelectionIndex === -1\n    */\n    const { isOptionsPanelOpen, nextPotentialSelectionIndex, selectBoxRef } = this.props;\n\n    const optionsPanelJustClosed = !isOptionsPanelOpen && prevProps.isOptionsPanelOpen;\n\n    if (this.optionsButton.current) {\n      if (optionsPanelJustClosed && selectBoxRef && selectBoxRef.contains(document.activeElement)) {\n        this.optionsButton.current.focus();\n      }\n\n      if (isOptionsPanelOpen && nextPotentialSelectionIndex === -1) {\n        this.optionsButton.current.focus();\n      }\n    }\n  }\n\n  public getCustomLabel(): React.ReactNode {\n    const { prefix, name, singleSelectSelectedOption, caretIcon, customLabelText } = this.props;\n\n    return (\n      <div className=\"rrs__label\">\n        <span\n          aria-label={`${prefix ? `${prefix} ` : ''}${singleSelectSelectedOption.text} selected`}\n          className=\"rrs__label__text\"\n          id={`rrs-${name}-label`}\n          data-testid={`rrs-label_${name}`}\n        >\n          {customLabelText}\n        </span>\n        {caretIcon && caretIcon}\n      </div>\n    );\n  }\n\n  public getDefaultLabel(): React.ReactNode {\n    const {\n      prefix,\n      singleSelectSelectedOption,\n      name,\n      caretIcon,\n      singleSelectSelectedIndex,\n      noSelectionLabel,\n    } = this.props;\n\n    if (singleSelectSelectedIndex === -1) {\n      return (\n        <div className=\"rrs__label\">\n          <span\n            aria-label={noSelectionLabel}\n            className=\"rrs__label__text\"\n            id={`rrs-${name}-label`}\n            data-testid={`rrs-label_${name}`}\n          >\n            {prefix && <span>{prefix}</span>}\n            {noSelectionLabel}\n          </span>\n          {caretIcon && caretIcon}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"rrs__label\">\n        <span\n          aria-label={`${prefix ? `${prefix} ` : ''}${singleSelectSelectedOption.text} selected`}\n          className=\"rrs__label__text\"\n          id={`rrs-${name}-label`}\n          data-testid={`rrs-label_${name}`}\n        >\n          {prefix && <span>{prefix}</span>}\n          {singleSelectSelectedOption.text ? singleSelectSelectedOption.text : <span>&nbsp;</span>}\n        </span>\n        {caretIcon && caretIcon}\n      </div>\n    );\n  }\n\n  public render(): React.ReactNode {\n    const {\n      customLabelText,\n      disabled,\n      isOptionsPanelOpen,\n      name,\n      nextPotentialSelectionIndex,\n      options,\n      singleSelectSelectedIndex,\n      singleSelectSelectedOption,\n    } = this.props;\n\n    let optHeaderLabel: string = '';\n\n    return (\n      <div>\n        <div\n          role=\"button\"\n          tabIndex={0}\n          aria-disabled={disabled}\n          aria-haspopup=\"true\"\n          aria-expanded={isOptionsPanelOpen}\n          aria-controls={`rrs-${name}-menu`}\n          ref={this.optionsButton}\n          className={singleline(`\n            rrs__button\n            ${disabled === true ? 'rrs__button--disabled' : ''}\n          `)}\n        >\n          {customLabelText ? this.getCustomLabel() : this.getDefaultLabel()}\n\n          {name && (\n            <input\n              type=\"hidden\"\n              name={name}\n              data-testid={`rrs-input_${name}`}\n              value={singleSelectSelectedOption.value}\n            />\n          )}\n        </div>\n\n        <ul\n          id={`rrs-${name}-menu`}\n          aria-labelledby={`rrs-${name}-label`}\n          role=\"menu\"\n          className=\"rrs__options\"\n          ref={this.optionsContainer}\n        >\n          {options.length > 0 &&\n            options.map((option: IOption, index: number) => {\n              if (option.optHeader) {\n                optHeaderLabel = option.text || (option.markup && (option.markup as HTMLElement).textContent) || '';\n              }\n              return (\n                <SingleSelectOption\n                  key={index}\n                  name={name}\n                  optHeaderLabel={optHeaderLabel}\n                  optionsContainerRef={this.optionsContainer}\n                  index={index}\n                  isOptionsPanelOpen={isOptionsPanelOpen}\n                  option={option}\n                  singleSelectSelectedIndex={singleSelectSelectedIndex}\n                  nextPotentialSelectionIndex={nextPotentialSelectionIndex}\n                />\n              );\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\n/* tslint:disable:max-line-length*/\nexport const CaretIcon = (props: any): React.ReactElement => (\n  <svg\n    className=\"caret-icon\"\n    x=\"0px\"\n    y=\"0px\"\n    width=\"11.848px\"\n    height=\"6.338px\"\n    viewBox=\"351.584 2118.292 11.848 6.338\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <g>\n      <path d=\"M363.311,2118.414c-0.164-0.163-0.429-0.163-0.592,0l-5.205,5.216l-5.215-5.216c-0.163-0.163-0.429-0.163-0.592,0s-0.163,0.429,0,0.592l5.501,5.501c0.082,0.082,0.184,0.123,0.296,0.123c0.103,0,0.215-0.041,0.296-0.123l5.501-5.501C363.474,2118.843,363.474,2118.577,363.311,2118.414L363.311,2118.414z\" />\n    </g>\n  </svg>\n);\n\nexport const ErrorIcon = (props: any): React.ReactElement => (\n  <svg\n    x=\"0px\"\n    y=\"0px\"\n    width=\"12px\"\n    height=\"12px\"\n    viewBox=\"0 0 1000 1000\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    style={{ fill: 'currentColor', marginRight: '4px' }}\n    {...props}\n  >\n    <g>\n      <path d=\"M868,953.8H132.1c-49.3,0-89-19.3-108.8-53.1C3.5,867,5.9,822.9,29.9,779.8l371.3-665.4c24.2-43.4,60.1-68.2,98.6-68.2c38.5,0,74.4,24.8,98.6,68.2L970,779.9c24,43.1,26.5,87.1,6.7,120.8C956.9,934.5,917.3,953.8,868,953.8L868,953.8z M499.8,116.1c-12.2,0-26.2,12.1-37.6,32.4L90.9,813.9c-11.6,20.9-14.4,39.6-7.4,51.5c7,11.8,24.7,18.6,48.5,18.6H868c23.9,0,41.6-6.7,48.5-18.6c6.9-11.8,4.2-30.6-7.4-51.4L537.4,148.5C526.1,128.2,512,116.1,499.8,116.1L499.8,116.1z M500,638.7c-19.3,0-34.9-15.6-34.9-34.9V289.5c0-19.3,15.6-34.9,34.9-34.9c19.3,0,34.9,15.6,34.9,34.9v314.3C534.9,623.1,519.3,638.7,500,638.7z M447.6,761.1c0,28.9,23.5,52.4,52.4,52.4c28.9,0,52.4-23.5,52.4-52.4c0-28.9-23.5-52.4-52.4-52.4C471.1,708.7,447.6,732.2,447.6,761.1z\" />\n    </g>\n  </svg>\n);\n\nexport const ModalCloseButton = (props: any): React.ReactElement => (\n  <div>\n    <svg\n      className=\"mobile-close__icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"12px\"\n      height=\"12px\"\n      viewBox=\"0 0 2541 2541\"\n      {...props}\n    >\n      <path d=\"M29 172c-39-39-39-103 0-142s103-39 142 0l1099 1099L2369 30c39-39 103-39 142 0s39 103 0 142L1412 1271l1099 1099c39 39 39 103 0 142s-103 39-142 0L1270 1413 171 2512c-39 39-103 39-142 0s-39-103 0-142l1099-1099L29 172z\" />\n    </svg>\n  </div>\n);\n\nexport const CheckboxIcon = (props: any): React.ReactElement => (\n  <svg\n    className=\"checkbox-icon\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    x=\"0px\"\n    y=\"0px\"\n    width=\"12px\"\n    height=\"12px\"\n    viewBox=\"0 0 488.878 488.878\"\n    {...props}\n  >\n    <g>\n      <polygon points=\"143.294,340.058 50.837,247.602 0,298.439 122.009,420.447 122.149,420.306 144.423,442.58 488.878,98.123 437.055,46.298 \" />\n    </g>\n  </svg>\n);\n\nexport const MultiSelectOptionMarkup = ({ text, ...props }: { text: string; props: any }): React.ReactElement => (\n  <div className=\"checkbox-container\">\n    <span className=\"checkbox\">\n      <CheckboxIcon {...props} />\n    </span>\n    <span className=\"checkbox-text\"> {text}</span>\n  </div>\n);\n/* tslint:enable:max-line-length */\n","import * as React from 'react';\nimport singleline from 'singleline';\nimport * as actionTypes from './constants/actionTypes';\nimport { handleBlur, handleClick, handleKeyEvent, handleTouchMove, handleTouchStart } from './lib/eventHandlers';\nimport { getCustomLabelText } from './lib/getCustomLabelText';\nimport { multiSelectBroadcastChange, singleSelectBroadcastChange } from './lib/onChangeBroadcasters';\nimport { initialState } from './reducers/initialState';\nimport { reducer } from './reducers/reducer';\nimport { IAction, IProps, IState } from './types/';\n\nimport { MultiSelect } from './components/MultiSelect';\nimport { SingleSelect } from './components/SingleSelect';\n\nexport class Select extends React.Component<IProps, IState> {\n  public selectBox: HTMLDivElement | null;\n  private reducer: (state: IState, action: IAction) => IState;\n  private firstLoad: boolean;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = initialState;\n    this.reducer = reducer;\n    this.firstLoad = true;\n    this.selectBox = null;\n  }\n\n  public componentDidMount(): void {\n    const { options, noSelectionLabel, selectedValue, selectedValues, name, multiselect, disabled } = this.props;\n\n    this.updateState({\n      type: actionTypes.INITIALISE,\n      value: {\n        options,\n        noSelectionLabel,\n        selectedValue,\n        selectedValues,\n        name,\n        multiselect,\n        disabled,\n      },\n    });\n  }\n\n  public componentDidUpdate(_prevProps: IProps, prevState: IState): boolean {\n    const { singleSelectSelectedOption, multiSelectSelectedOptions, multiselect, altered } = this.state;\n    const { onChange } = this.props;\n\n    if (this.firstLoad) {\n      this.firstLoad = false;\n      return false;\n    }\n\n    if (multiselect) {\n      multiSelectBroadcastChange(\n        multiSelectSelectedOptions.options,\n        Boolean(altered),\n        onChange,\n        prevState.multiSelectSelectedOptions.options\n      );\n    } else {\n      singleSelectBroadcastChange(\n        singleSelectSelectedOption,\n        Boolean(altered),\n        onChange,\n        prevState.singleSelectSelectedOption\n      );\n    }\n\n    return true;\n  }\n\n  public updateState(action: IAction, callback?: (nextState: IState) => any): void {\n    const { onListen, name } = this.props;\n    const nextState = this.reducer(this.state, action);\n\n    this.setState(nextState, () => {\n      if (callback) {\n        callback(nextState);\n      }\n    });\n\n    /* Allow user to listen to actions being fired */\n    if (onListen) {\n      const isOpen = [\n        actionTypes.SET_OPTIONS_PANEL_OPEN,\n        actionTypes.SET_NEXT_SELECTED_INDEX,\n        actionTypes.SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC,\n        actionTypes.SET_IS_DRAGGING,\n      ].some((actionType: string) => action.type === actionType);\n\n      onListen(isOpen, name, action.type);\n    }\n  }\n\n  public focusButton(): void {\n    const el: HTMLDivElement | null = this.selectBox && this.selectBox.querySelector('.rrs__button');\n    // tslint:disable-next-line no-unused-expression\n    el && el.focus();\n  }\n\n  public onHandleKeyEvent = (e: any): void => {\n    handleKeyEvent({\n      event: e,\n      RRSClassRef: this,\n      state: this.state,\n      props: this.props,\n    });\n  };\n\n  public onHandleTouchStart = (_e: any): void => {\n    handleTouchStart({\n      RRSClassRef: this,\n      state: this.state,\n    });\n  };\n\n  public onHandleTouchMove = (_e: any): void => {\n    handleTouchMove({\n      RRSClassRef: this,\n      state: this.state,\n    });\n  };\n\n  public onHandleClick = (e: any): void => {\n    handleClick({\n      event: e,\n      RRSClassRef: this,\n      state: this.state,\n      props: this.props,\n    });\n  };\n\n  public onHandleBlur = (_e: any): void => {\n    handleBlur({\n      RRSClassRef: this,\n      state: this.state,\n      props: this.props,\n    });\n  };\n\n  public render(): React.ReactNode {\n    const { prefix, caretIcon, modalCloseButton } = this.props;\n    const {\n      altered,\n      disabled,\n      hasOptHeaders,\n      isOptionsPanelOpen,\n      isDragging,\n      noSelectionLabel,\n      multiSelectSelectedIndexes,\n      multiSelectSelectedOptions,\n      name,\n      nextPotentialSelectionIndex,\n      options,\n      singleSelectSelectedIndex,\n      singleSelectSelectedOption,\n      multiselect,\n    } = this.state;\n\n    const customLabelText = getCustomLabelText({\n      props: this.props,\n      state: this.state,\n    });\n\n    return (\n      <div\n        data-testid={name}\n        data-name={name}\n        className={singleline(`\n          rrs\n          ${isOptionsPanelOpen === true ? 'rrs--options-visible' : ''}\n          ${altered ? 'rrs--has-changed' : ''}\n          ${hasOptHeaders ? 'rrs--has-opt-headers' : ''}\n        `)}\n        ref={(r: HTMLDivElement): void => {\n          this.selectBox = r;\n        }}\n        tabIndex={-1}\n        onKeyDown={this.onHandleKeyEvent}\n        onTouchStart={this.onHandleTouchStart}\n        onTouchMove={this.onHandleTouchMove}\n        onTouchEnd={this.onHandleClick}\n        onMouseDown={this.onHandleClick}\n        onBlur={this.onHandleBlur}\n      >\n        {!!modalCloseButton && isOptionsPanelOpen === true && (\n          <div aria-hidden=\"true\" className=\"mobile-close\">\n            {modalCloseButton}\n          </div>\n        )}\n        {multiselect ? (\n          <MultiSelect\n            disabled={Boolean(disabled)}\n            isDragging={isDragging}\n            caretIcon={caretIcon}\n            customLabelText={customLabelText}\n            prefix={prefix || ''}\n            name={name}\n            multiSelectSelectedOptions={multiSelectSelectedOptions}\n            multiSelectSelectedIndexes={multiSelectSelectedIndexes}\n            nextPotentialSelectionIndex={nextPotentialSelectionIndex}\n            isOptionsPanelOpen={isOptionsPanelOpen}\n            options={options}\n            selectBoxRef={this.selectBox}\n          />\n        ) : (\n          <SingleSelect\n            noSelectionLabel={noSelectionLabel || ''}\n            disabled={Boolean(disabled)}\n            caretIcon={caretIcon}\n            prefix={prefix || ''}\n            name={name}\n            customLabelText={customLabelText}\n            singleSelectSelectedOption={singleSelectSelectedOption}\n            singleSelectSelectedIndex={singleSelectSelectedIndex}\n            nextPotentialSelectionIndex={nextPotentialSelectionIndex}\n            isOptionsPanelOpen={isOptionsPanelOpen}\n            options={options}\n            selectBoxRef={this.selectBox}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport * from './Extras';\nexport * from './types/';\n"],"names":["INITIALISE","SET_IS_DRAGGING","SET_OPTIONS_PANEL_OPEN","SET_OPTIONS_PANEL_CLOSED","SET_SINGLESELECT_OPTIONS","SET_MULTISELECT_OPTIONS","SET_OPTIONS_PANEL_CLOSED_NO_SELECTION","SET_OPTIONS_PANEL_CLOSED_ONBLUR","SET_NEXT_SELECTED_INDEX","SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC","stringMatch","timeoutActive","handleAlphaNumerical","event","state","RRSClassRef","options","disabled","key","setTimeout","foundIndexes","reduce","acc","option","index","optHeader","text","toLowerCase","indexOf","push","length","updateState","value","type","actionTypes","skipCircularReference","cache","_key","isEqual","a","b","JSON","stringify","multiSelectBroadcastChange","currOptions","altered","fn","prevOptions","shouldBroadcastChange","values","map","currOption","name","singleSelectBroadcastChange","currValue","prevValue","handleBlur","props","onBlur","multiselect","isOptionsPanelOpen","singleSelectSelectedOption","multiSelectSelectedOptions","isOutsideSelectBox","selectBox","contains","document","activeElement","Boolean","containsClassName","element","classNameStr","String","className","split","handleClick","isDragging","preventDefault","target","parseFloat","getAttribute","isExistingSelection","some","hasOwnProperty","onSelect","onDeselect","focusButton","newState","handleEnterPressed","nextPotentialSelectionIndex","stopPropagation","onSubmit","keyCodes","TAB","ENTER","SPACE","ESCAPE","UP","DOWN","preventDefaultForKeyCodes","e","forEach","keyCode","nextValidIndex","mode","possibleOptionIndexes","indexNotFocusable","nextSelectionPossible","getNextIndex","handleKeyUpOrDownPressed","handleKeyEvent","test","handleTouchMove","handleTouchStart","getCustomLabelText","customLabelRenderer","initialState","singleSelectInitialIndex","singleSelectSelectedIndex","multiSelectInitialSelectedIndexes","multiSelectSelectedIndexes","addMultiSelectIndex","addMultiSelectOption","findClosestValidOption","possibleOptions","getInitialMultiSelectOption","getMultiSelectInitialSelectedOptions","selectedValues","noSelectionLabel","selectedOptionsToReturn","filter","selectedValue","getMultiSelectSelectedValueIndexes","emptyResult","result","selected","getSelectedValueIndex","closestValidOption","getSingleSelectSelectedOption","initialSelectedIndex","selectionIndex","isAltered","mergeIsAlteredState","removeMultiSelectIndex","indexLocation","slice","removeMultiSelectOption","resetMultiSelectState","reducer","action","initialSelectedIndexes","hasOptHeaders","nextState","isFirstOptionInListSelected","shouldDeselectAllAndSelectFirstOption","shouldDeselectFirstOptionAndSelectRequestedOption","actionOptionIndexAdjusted","MultiSelectOption","optionRef","React","scrollOffset","getScrollOffset","el","querySelector","Math","ceil","getBoundingClientRect","height","componentDidUpdate","optionsContainerRef","optHeaderLabel","current","focus","scrollDiff","top","scroll","floor","scrollTop","isDisabled","render","isSelected","i","role","tabIndex","markup","textContent","ref","singleline","MultiSelect","optionsButton","optionsContainer","prevProps","selectBoxRef","optionsPanelJustClosed","getAriaLabel","prefix","selectedOptionsLength","join","caretIcon","customLabelText","id","v","SingleSelectOption","SingleSelect","getCustomLabel","getDefaultLabel","CaretIcon","x","y","width","viewBox","xmlns","d","ErrorIcon","style","fill","marginRight","ModalCloseButton","CheckboxIcon","points","MultiSelectOptionMarkup","Select","_e","firstLoad","componentDidMount","_prevProps","prevState","onChange","callback","onListen","setState","isOpen","actionType","modalCloseButton","r","onKeyDown","onHandleKeyEvent","onTouchStart","onHandleTouchStart","onTouchMove","onHandleTouchMove","onTouchEnd","onHandleClick","onMouseDown","onHandleBlur"],"mappings":"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"}