{"ast":null,"code":"import _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport globalAxios from 'axios';\nexport var BASE_PATH = \"https://petstore.swagger.io/v2\".replace(/\\/+$/, \"\");\nexport var COLLECTION_FORMATS = {\n  csv: \",\",\n  ssv: \" \",\n  tsv: \"\\t\",\n  pipes: \"|\"\n};\nexport var BaseAPI = function BaseAPI(configuration, basePath = BASE_PATH, axios = globalAxios) {\n  _classCallCheck(this, BaseAPI);\n\n  this.basePath = basePath;\n  this.axios = axios;\n\n  if (configuration) {\n    this.configuration = configuration;\n    this.basePath = configuration.basePath || this.basePath;\n  }\n};\n;\nexport var RequiredError = function (_Error) {\n  _inherits(RequiredError, _Error);\n\n  var _super = _createSuper(RequiredError);\n\n  function RequiredError(field, msg) {\n    var _this;\n\n    _classCallCheck(this, RequiredError);\n\n    _this = _super.call(this, msg);\n    _this.field = field;\n    _this.name = \"RequiredError\";\n    return _this;\n  }\n\n  return RequiredError;\n}(_wrapNativeSuper(Error));","map":{"version":3,"sources":["/home/stian/Documents/uninett_case/testdir/OpenAPIClient/generated/base.ts"],"names":["globalAxios","BASE_PATH","replace","COLLECTION_FORMATS","csv","ssv","tsv","pipes","BaseAPI","configuration","basePath","axios","RequiredError","field","msg","name","Error"],"mappings":";;;;;;;;;;AAkBA,OAAOA,WAAP,MAAyD,OAAzD;AAEA,OAAO,IAAMC,SAAS,GAAG,iCAAiCC,OAAjC,CAAyC,MAAzC,EAAiD,EAAjD,CAAlB;AAMP,OAAO,IAAMC,kBAAkB,GAAG;AAC9BC,EAAAA,GAAG,EAAE,GADyB;AAE9BC,EAAAA,GAAG,EAAE,GAFyB;AAG9BC,EAAAA,GAAG,EAAE,IAHyB;AAI9BC,EAAAA,KAAK,EAAE;AAJuB,CAA3B;AAsBP,WAAaC,OAAb,GAGI,iBAAYC,aAAZ,EAAqDC,QAAgB,GAAGT,SAAxE,EAA6FU,KAAoB,GAAGX,WAApH,EAAiI;AAAA;;AAAA,OAA5EU,QAA4E,GAA5EA,QAA4E;AAAA,OAApCC,KAAoC,GAApCA,KAAoC;;AAC7H,MAAIF,aAAJ,EAAmB;AACf,SAAKA,aAAL,GAAqBA,aAArB;AACA,SAAKC,QAAL,GAAgBD,aAAa,CAACC,QAAd,IAA0B,KAAKA,QAA/C;AACH;AACJ,CARL;AASC;AAQD,WAAaE,aAAb;AAAA;;AAAA;;AAEI,yBAAmBC,KAAnB,EAAkCC,GAAlC,EAAgD;AAAA;;AAAA;;AAC5C,8BAAMA,GAAN;AAD4C,UAA7BD,KAA6B,GAA7BA,KAA6B;AAAA,UADhDE,IACgD,GADxB,eACwB;AAAA;AAE/C;;AAJL;AAAA,mBAAmCC,KAAnC","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Swagger Petstore\n * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n *\n * The version of the OpenAPI document: 1.0.5\n * Contact: apiteam@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n\nexport const BASE_PATH = \"https://petstore.swagger.io/v2\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}